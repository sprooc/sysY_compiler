decl @getint(): i32
decl @getch(): i32
decl @getarray(*i32): i32
decl @putint(i32)
decl @putch(i32)
decl @putarray(i32, *i32)
decl @starttime()
decl @stoptime()
fun @main(): i32 {
%entry:
  @i_0 = alloc i32
  store 0, @i_0
  jump %L1
%L1:
  %0 = load @i_0
  %1 = lt %0, 10
  br %1, %L2, %L0
%L2:
  @a_1 = alloc i32
  store 1, @a_1
  %2 = load @a_1
  %3 = add %2, 2
  store %3, @a_1
  %4 = load @i_0
  %5 = add %4, 1
  store %5, @i_0
  jump %L1
%L0:
  ret 0
}
  .data
  .text
  .globl main
main:
  addi  sp, sp, -32
entry:
  sw    x0, 0(sp)
  j     L1
L1:
  lw    t0, 0(sp)
  sw    t0, 4(sp)
  lw    t0, 4(sp)
  li    t1, 10
  slt   t0, t0, t1
  sw    t0, 8(sp)
  lw    t0, 8(sp)
  bnez  t0, L2
  j     L0
L2:
  li    t0, 1
  sw    t0, 12(sp)
  lw    t0, 12(sp)
  sw    t0, 16(sp)
  lw    t0, 16(sp)
  li    t1, 2
  add   t0, t0, t1
  sw    t0, 20(sp)
  lw    t0, 20(sp)
  sw    t0, 12(sp)
  lw    t0, 0(sp)
  sw    t0, 24(sp)
  lw    t0, 24(sp)
  li    t1, 1
  add   t0, t0, t1
  sw    t0, 28(sp)
  lw    t0, 28(sp)
  sw    t0, 0(sp)
  j     L1
L0:
