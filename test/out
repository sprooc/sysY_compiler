decl @getint(): i32
decl @getch(): i32
decl @getarray(*i32): i32
decl @putint(i32)
decl @putch(i32)
decl @putarray(i32, *i32)
decl @starttime()
decl @stoptime()
fun @half(@x: i32): i32 {
%L0:
  @x_0 = alloc i32
  store @x, @x_0
  %0 = load @x_0
  %1 = div %0, 2
  ret %1
}
fun @f() {
%L1:
  ret 
}
fun @main(): i32 {
%entry:
  call @f()
  %3 = call @half(10)
  ret %3
}
  .text
  .global half
half:
  addi  sp, sp, -16
L0:
  sw    a1, 0(sp)
  lw    t0, 0(sp)
  sw    t0, 4(sp)
  lw    t0, 4(sp)
  li    t1, 2
  div   t0, t0, t1
  sw    t0, 8(sp)
  lw    a0, 8(sp)
  addi  sp, sp, 16
  ret

  .text
  .global f
f:
  addi  sp, sp, 0
L1:
  addi  sp, sp, 0
  ret

  .text
  .global main
main:
  addi  sp, sp, -16
  sw    ra, 12(sp)
entry:
  call  f
  call  half
  sw    a0, 0(sp)
  lw    a0, 0(sp)
  lw    ra, 12(sp)
  addi  sp, sp, 16
  ret

